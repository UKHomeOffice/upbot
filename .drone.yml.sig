eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIG15LWJ1aWxkOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IHVwYm90IC4KICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCgogIGltYWdlX3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrdXBib3QiIC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyB1cGJvdCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvdXBib3Q6JHtEUk9ORV9DT01NSVRfU0hBfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC91cGJvdDoke0RST05FX0NPTU1JVF9TSEF9CiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogcHVzaAoKICBub3RpZnlfc2xhY2s6CiAgICAgaW1hZ2U6IHBsdWdpbnMvc2xhY2s6MS4wCiAgICAgY2hhbm5lbDogZHJvbmUKICAgICB1c2VybmFtZTogZHJvbmUKICAgICB0ZW1wbGF0ZTogPgogICAgICAgQnVpbGQgI3t7YnVpbGQuTnVtYmVyfX0gZmluaXNoZWQgd2l0aCBhICp7e2J1aWxkLlN0YXR1c319KiBzdGF0dXMuCiAgICAgICAgICpEcm9uZSBsaW5rKjoge3tidWlsZC5MaW5rfX0KICAgICAgICAgKkJyYW5jaCo6IHt7YnVpbGQuQnJhbmNofX0KICAgICAgICAgKkF1dGhvcio6IHt7YnVpbGQuQXV0aG9yfX0KICAgICAgICAgKkNvbW1pdCo6IHt7YnVpbGQuQ29tbWl0fX0KICAgICB3aGVuOgogICAgICAgZXZlbnQ6IFtwdXNoXQogICAgICAgc3RhdHVzOiBbc3VjY2VzcywgZmFpbHVyZV0KCnNlcnZpY2VzOgogIGRpbmQ6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEtZGluZAogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgY29tbWFuZDoKICAgICAgLSAiLXMiCiAgICAgIC0gIm92ZXJsYXkiCg.WFV_RsUs-W-65NOHiHrLJeDetUb1vbF3cawkScqUeLs